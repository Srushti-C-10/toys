<local:EditorWindow x:Class="FancyZonesEditor.CanvasEditorWindow"
        AutomationProperties.Name="{x:Static props:Resources.Canvas_Layout_Editor}"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FancyZonesEditor"
        xmlns:props="clr-namespace:FancyZonesEditor.Properties"
        mc:Ignorable="d"
        Title="" 
        Width="536"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        SizeToContent="Height"            
        Background="{DynamicResource PrimaryBackgroundBrush}"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        Closed="OnClosed">

        <!--<Style x:Key="customButtonFocusVisualStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="1" Stroke="White" StrokeDashArray="1 2" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    <Grid>
        <Grid
            Height="36"
            Background="{DynamicResource SecondaryBackgroundBrush}"
            Margin="0,-36,0,0"
            VerticalAlignment="Top"
            HorizontalAlignment="Stretch">
            <Border
                Background="{DynamicResource TitleBarSecondaryForegroundBrush}"
                Width="30"
                Height="3"
                CornerRadius="1.5"
                VerticalAlignment="Center"
                Margin="0,4,0,0" />
        </Grid>
        <StackPanel Margin="16" FocusManager.FocusedElement="{Binding ElementName=newZoneButton}">
        <TextBlock Name="windowEditorDialogTitle"
                   Text="{x:Static props:Resources.Custom_Layout_Creator}"
                   Style="{StaticResource SubtitleTextBlockStyle}"  />
        <TextBlock x:Name="customLayoutName"
                   Text="{x:Static props:Resources.Name}"
                   Margin="0,16,0,0"
                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>
        <TextBox Text="{Binding Name}"
                 Margin="0,6,0,0"
                 AutomationProperties.LabeledBy="{Binding ElementName=customLayoutName}"
                 Style="{StaticResource DefaultTextBoxStyle}"/>

        <Button x:Name="newZoneButton"
                AutomationProperties.LabeledBy="{Binding ElementName=newZoneName}"
                HorizontalAlignment="Stretch"
                Height="96"
                Margin="0,32,0,0"
                Style="{StaticResource DefaultButtonStyle}"
                Click="OnAddZone">
            <StackPanel Orientation="Vertical">
                <TextBlock HorizontalAlignment="Center"
                            Text="&#xE109;"
                            FontSize="32"
                            Margin="0,8,0,0"
                            FontFamily="Segoe MDL2 Assets"/>

                <TextBlock x:Name="newZoneName"
                           Margin="12"
                           Text="{x:Static props:Resources.Add_zone}"/>

            </StackPanel>
        </Button>


        <!--
        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
            <CheckBox x:Name="showGridSetting" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="True" Margin="16,4,0,0"/>
            <TextBlock Text="Show snap grid" Style="{StaticResource settingText}" />
            <TextBlock Text="Grid spacing" Style="{StaticResource settingText}" Margin="40,10,10,0" />
            <TextBox x:Name="gridValue" Text="{Binding Path=Spacing,Mode=TwoWay}" Style="{StaticResource textBox}"/>
        </StackPanel>
        -->
        <Grid Margin="0,48,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="{x:Static props:Resources.Cancel}"
                    Style="{StaticResource DefaultButtonStyle}"
                    HorizontalAlignment="Stretch"
                    Click="OnCancel"/>
            <Button Content="{x:Static props:Resources.Save_Apply}"
                    Style="{StaticResource AccentButtonStyle}"
                    HorizontalAlignment="Stretch"
                    Grid.Column="2" 
                    Click="OnSaveApplyTemplate" />
        </Grid>
    </StackPanel>
    </Grid>
</local:EditorWindow>