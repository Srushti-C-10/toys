<Window x:Class="FancyZonesEditor.MainWindow"
        x:Name="MainWindow1"
        AutomationProperties.Name="{x:Static props:Resources.Fancy_Zones_Main_Editor}"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FancyZonesEditor"
        xmlns:Converters="clr-namespace:FancyZonesEditor.Converters"
        xmlns:props="clr-namespace:FancyZonesEditor.Properties"
        xmlns:local1="clr-namespace:FancyZonesEditor.ViewModels"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"   
        ui:TitleBar.IsIconVisible="True"
        ui:TitleBar.Background="{DynamicResource SecondaryBackgroundBrush}"
        ui:TitleBar.InactiveBackground="{DynamicResource SecondaryBackgroundBrush}"
        mc:Ignorable="d"
        Title=""
        MinWidth="1000"
        MaxWidth="1000"
        MinHeight="800"
        MaxHeight="800"
        ContentRendered="MainWindow1_ContentRendered"
        Background="{DynamicResource PrimaryBackgroundBrush}"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        Initialized="OnInitialized"
        Closing="OnClosing">
    <Window.Resources>
        <Converters:ModelToVisibilityConverter x:Key="ModelToVisibilityConverter" />
        <Converters:BooleanToIntConverter x:Key="BooleanToIntConverter" />

        <Style x:Key="desktopButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource ScreenItemBackgroundBrush}"/>
            <Setter Property="Width" Value="{Binding DisplayWidth}" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="Height" Value="{Binding DisplayHeight}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4" 
                                BorderBrush="{TemplateBinding Background}"
                                BorderThickness="1">
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="6" Opacity="0.24" ShadowDepth="1" />
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LayoutItemBorderPointerOverBrush}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Selected}" Value="true">
                                <Setter Property="Background" Value="{DynamicResource SystemAccentColorLight1Brush}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="desktopButton">
            <Button Style="{StaticResource desktopButtonStyle}"
                    Command="{Binding DataContext.SelectCommand, ElementName= MainWindowItemControl}" 
                    CommandParameter="{Binding}">
                <Button.Content>
                    <Grid Name="MonitorsGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="0.40*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Name="desktopId"
                                   Text="{Binding Index}"
                                   HorizontalAlignment="Center"
                                   FontWeight="SemiBold"
                                   FontSize="42"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   Grid.Row="0"/>
                        <TextBlock Name="desktopDimensions"
                                   Text="{Binding Dimensions}"
                                   HorizontalAlignment="Center"
                                   FontSize="10"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   Grid.Row="1" />
                    </Grid>
                </Button.Content>
            </Button>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Selected}" Value="true">
                    <Setter TargetName="desktopId" Property="Foreground" Value="White" />
                    <Setter TargetName="desktopDimensions" Property="Foreground" Value="White" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        
        <ContextMenu x:Key="DefaultModelsContextMenu">
            <MenuItem Click="DuplicateLayout_Click" Header="Duplicate">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xE16F;" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="CustomModelsContextMenu">
            <MenuItem Click="EditLayout_Click" Header="Edit">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xE104;" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Click="DeleteLayout_Click" Header="Delete">
                <MenuItem.Icon>
                    <ui:FontIcon Glyph="&#xE107;" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <DataTemplate x:Key="LayoutItemTemplate">
            <Border x:Name="LayoutItem" 
                    Background="{DynamicResource LayoutItemBackgroundBrush}"
                    BorderBrush="{DynamicResource LayoutItemBackgroundBrush}"
                    BorderThickness="1"
                    MouseEnter="LayoutItem_MouseEnter"
                    MouseDown="LayoutItem_Click"   
                    Focusable="True"
                    CornerRadius="4"
                    Margin="8"
                    FocusManager.GotFocus="LayoutItem_Focused">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="6" Opacity="0.24" ShadowDepth="1" />
                </Border.Effect>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="32"/>
                    </Grid.RowDefinitions>
                    <local:LayoutPreview Margin="16"
                                         ZoneBackground="{DynamicResource LayoutPreviewZoneBackgroundBrush}"
                                         ZoneBorder="{DynamicResource LayoutPreviewZoneBorderBrush}"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch"/>
                    <TextBlock Name="layoutName"
                               Padding="8,0,8,0"
                               TextTrimming="CharacterEllipsis" 
                               Text="{Binding Name}"
                               FontSize="12"
                               Grid.Row="1"
                               FontWeight="SemiBold"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsApplied}" Value="true">
                    <Setter TargetName="layoutName" Property="Foreground" Value="#F2F2F2" />
                    <Setter TargetName="LayoutItem" Property="Background" Value="{DynamicResource SystemAccentColorLight1Brush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="true">
                    <Setter TargetName="LayoutItem" Property="BorderBrush" Value="{DynamicResource LayoutItemBorderPointerOverBrush}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="48"/>
        </Grid.RowDefinitions>
        <!-- (Optional) desktop selection grid-->

        <TextBlock x:Name="DialogTitle"
                       Text="{x:Static props:Resources.Choose_Layout}"
                       Style="{StaticResource BaseTextBlockStyle}"
                       HorizontalAlignment="Center"
                       Margin="32,8,16,8"  />


        <Grid Grid.Row="1" Background="{DynamicResource PrimaryBackgroundBrush}">
            <ScrollViewer>
                <StackPanel Orientation="Vertical" Margin="0,0,0,32">
                    <TextBlock Text="Templates"
                               FontWeight="SemiBold"
                               FontSize="24"
                               Margin="16,16,16,0"/>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ItemsControl ItemsSource="{Binding DefaultModels}"
                                  ItemTemplate="{StaticResource LayoutItemTemplate}"
                                  Margin="8,8,0,0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" 
                                           ItemWidth="{Binding ElementName=MainWindow1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Path=WrapPanelItemSize}" 
                                           ItemHeight="{Binding ElementName=WrapPanel1, Path=ItemWidth}" 
                                           x:Name="WrapPanel1" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="ContextMenu" Value="{StaticResource DefaultModelsContextMenu}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                        <StackPanel Grid.Column="1"
                                    Width="120" 
                                    Orientation="Vertical"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                            <Button x:Name="incrementZones"
                                    Width="48"
                                    Height="48"
                                    FontSize="18"
                                    Background="Transparent"
                                    Content="&#xE948;"
                                    HorizontalAlignment="Center"
                                    FontFamily="Segoe MDL2 Assets"
                                    Style="{StaticResource DefaultButtonStyle}"
                                    AutomationProperties.Name="{x:Static props:Resources.Zone_Count_Increment}"
                                    Click="IncrementZones_Click"/>

                            <TextBlock x:Name="zoneCount"
                                       Text="{Binding ZoneCount}"
                                       TextAlignment="Center"
                                       FontSize="24"
                                       Width="48"
                                       Margin="8"
                                       Foreground="{DynamicResource SystemAccentColorLight1Brush}"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Center"/>
                            
                            <Button x:Name="decrementZones"
                                    Width="48"
                                    Height="48"
                                    Content="&#xE949;"
                                    FontSize="18"
                                    HorizontalAlignment="Center"
                                    Background="Transparent"
                                    FontFamily="Segoe MDL2 Assets"
                                    AutomationProperties.Name="{x:Static props:Resources.Zone_Count_Decrement}"
                                    Style="{StaticResource DefaultButtonStyle}"
                                    Click="DecrementZones_Click" />
                            
                        </StackPanel>
                    </Grid>


                    <TextBlock Text="Custom layouts"
                               FontWeight="SemiBold"
                               Margin="16,16,16,0"
                               FontSize="24" />

                    <Button x:Name="NewLayoutButton"
                            Click="NewLayoutButton_Click"
                            HorizontalAlignment="Left"
                            Background="Transparent"
                            Margin="6,8,0,0">
                        <StackPanel Orientation="Horizontal" Margin="8">
                            <TextBlock Text="&#xE109;"
                                       FontFamily="Segoe MDL2 Assets"
                                       Foreground="{DynamicResource SystemAccentColorLight1Brush}" />
                            <TextBlock Text="Create new layout"
                                       Margin="12,-3,0,0"
                                       Foreground="{DynamicResource PrimaryForegroundBrush}" />
                        </StackPanel>
                    </Button>

                    <ItemsControl ItemsSource="{Binding CustomModels}"
                                  ItemTemplate="{StaticResource LayoutItemTemplate}"
                                  Margin="8,8,0,0">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"
                                       ItemWidth="{Binding ElementName=MainWindow1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Path=WrapPanelItemSize}"
                                       ItemHeight="{Binding ElementName=WrapPanel2, Path=ItemWidth}"
                                       x:Name="WrapPanel2" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <Setter Property="ContextMenu" Value="{StaticResource CustomModelsContextMenu}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <Grid Background="{DynamicResource SecondaryBackgroundBrush}">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="6" Opacity="0.24" ShadowDepth="1" />
            </Grid.Effect>
            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.PanningMode="HorizontalOnly"
                          Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}"
                          PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                <ScrollViewer.DataContext>
                    <local1:MonitorViewModel/>
                </ScrollViewer.DataContext>
                <ItemsControl x:Name="MainWindowItemControl" 
                              ItemsSource="{Binding MonitorInfoForViewModel}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Background="Transparent" 
                                        Orientation="Horizontal" 
                                        HorizontalAlignment="Center" 
                                        Margin="8, 0, 8, 32" 
                                        Visibility="{Binding DesktopsPanelVisibility}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Template="{StaticResource desktopButton}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

        <Grid Grid.Row="2" Background="{DynamicResource TertairyBackgroundBrush}">
            <Button Content="Settings">
                <ui:FlyoutService.Flyout>
                    <ui:Flyout>
                        <Grid>
                            <StackPanel Margin="16">
                                <TextBlock Text="Configuration"
                                           Style="{StaticResource BaseTextBlockStyle}"
                                           Foreground="{DynamicResource PrimaryForegroundBrush}"
                                           Margin="0,28,0,24" />

                                <ui:ToggleSwitch x:Name="spaceAroundSetting"
                                                 Header="{x:Static props:Resources.Show_Space_Zones}"
                                                 IsOn="{Binding ShowSpacing}" />

                                <TextBlock x:Name="paddingValue"
                                           Text="{x:Static props:Resources.Space_Around_Zones}"
                                           IsEnabled="{Binding ShowSpacing}"
                                           Margin="0,8,0,0"
                                           Foreground="{DynamicResource PrimaryForegroundBrush}" />

                                <TextBox Margin="0,6,0,0"
                                         IsEnabled="{Binding ShowSpacing}"
                                         Text="{Binding Spacing, Mode=TwoWay}"
                                         Width="86"
                                         HorizontalAlignment="Left"
                                         AutomationProperties.LabeledBy="{Binding ElementName=paddingValue}" />

                                <TextBlock Text="{x:Static props:Resources.Distance_adjacent_zones}"
                                           IsEnabled="{Binding ShowSpacing}"
                                           Margin="0,16,0,0"
                                           Foreground="{DynamicResource PrimaryForegroundBrush}"
                                           x:Name="sensitivityRadiusValue" />

                                <TextBox Margin="0,6,0,0"
                                         Text="{Binding SensitivityRadius, Mode=TwoWay}"
                                         Width="86"
                                         AutomationProperties.LabeledBy="{Binding ElementName=sensitivityRadiusValue}"
                                         HorizontalAlignment="Left" />
                            </StackPanel>
                        </Grid>
                    </ui:Flyout>
                </ui:FlyoutService.Flyout>
            </Button>
            
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Stretch">
                <Button x:Name="ResetButton"
                        Content="{x:Static props:Resources.Reset_Layout}"
                        Style="{StaticResource DefaultButtonStyle}"
                        Click="Reset_Click"/>
                
                <Button x:Name="CloseButton" 
                        Content="{x:Static props:Resources.Close}"
                        Margin="8,0,0,0"
                        Visibility="{Binding DesktopsPanelVisibility}"
                        Style="{StaticResource DefaultButtonStyle}"
                        Click="CloseButton_Click" >
                    <Button.DataContext>
                        <local1:MonitorViewModel/>
                    </Button.DataContext>
                </Button>
            </StackPanel>
        </Grid>
        
        <ui:ContentDialog x:Name="NewLayoutDialog"
                          HorizontalAlignment="Center"
                            
                          VerticalAlignment="Center"
                          Grid.RowSpan="3"
                          PrimaryButtonStyle="{StaticResource AccentButtonStyle}"
                          SecondaryButtonText="Cancel"
                          PrimaryButtonText="Create"
                          PrimaryButtonClick="NewLayoutDialog_PrimaryButtonClick"
                          d:IsHidden="True">
            <StackPanel>
                <TextBlock Text="Choose your layout type"
                           FontSize="24"
                           HorizontalAlignment="Center"
                           FontWeight="Bold" />
                <RadioButton x:Name="GridLayoutRadioButton"
                             GroupName="LayoutTypeGroup"
                             IsChecked="True"
                             Margin="0,24,0,0" 
                             Style="{StaticResource LayoutTypeRadioButtonStyle}">
                    <RadioButton.Content>
                        <Grid Width="420" Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="&#xE138;"
                                       FontSize="16"
                                       Foreground="{DynamicResource SystemAccentColorLight1Brush}"
                                       Margin="0,4,0,0"
                                       HorizontalAlignment="Left"
                                       FontFamily="Segoe MDL2 Assets" />
                            <StackPanel Grid.Column="1"
                                        Orientation="Vertical">
                                <TextBlock TextWrapping="Wrap"
                                           FontWeight="Bold"
                                           Margin="0,3,0,0"
                                           Text="Grid"/>
                                <TextBlock TextWrapping="Wrap"
                                           Margin="0,4,0,0"
                                           Text="Create layouts that are horizontally or vertically stacked"
                                           Foreground="{DynamicResource SecondaryForegroundBrush}"/>
                            </StackPanel>
                        </Grid>
                    </RadioButton.Content>
                </RadioButton>

                <RadioButton x:Name="CanvasLayoutRadioButton"
                             GroupName="LayoutTypeGroup"
                             IsChecked="True"
                             Style="{StaticResource LayoutTypeRadioButtonStyle}"
                             Margin="0,0,0,64">
                    <RadioButton.Content>
                        <Grid Width="420"
                              Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="&#xF5ED;"
                                       FontSize="16"
                                       Foreground="{DynamicResource SystemAccentColorLight1Brush}"
                                       Margin="0,4,0,0"
                                       HorizontalAlignment="Left"
                                       FontFamily="Segoe MDL2 Assets" />
                            <StackPanel Grid.Column="1"
                                        Orientation="Vertical">
                                <TextBlock TextWrapping="Wrap"
                                           FontWeight="Bold"
                                           Margin="0,3,0,0"
                                           Text="Canvas"/>
                                <TextBlock TextWrapping="Wrap"
                                           Margin="0,4,0,0"
                                           Text="Create layouts that have overlapping zones"
                                           Foreground="{DynamicResource SecondaryForegroundBrush}"/>
                            </StackPanel>
                        </Grid>
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>
        </ui:ContentDialog>
    </Grid>
</Window>
