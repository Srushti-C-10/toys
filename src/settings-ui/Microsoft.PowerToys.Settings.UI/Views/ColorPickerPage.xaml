<Page
    x:Class="Microsoft.PowerToys.Settings.UI.Views.ColorPickerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Color="using:Microsoft.PowerToys.Settings.UI.Library.ViewModels"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Custom="using:Microsoft.PowerToys.Settings.UI.Controls"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Microsoft.PowerToys.Settings.UI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="400"
    AutomationProperties.LandmarkType="Main"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">

    <Grid RowSpacing="{StaticResource DefaultRowSpacing}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel
            x:Name="ColorPickerView"
            MaxWidth="{StaticResource MaxContentWidth}"
            Margin="0,0,48,0"
            HorizontalAlignment="Left"
            Orientation="Vertical">
            <ToggleSwitch x:Uid="ColorPicker_EnableColorPicker" IsOn="{Binding IsEnabled, Mode=TwoWay}" />

            <TextBlock
                x:Uid="Shortcuts"
                Foreground="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled, Converter={StaticResource ModuleEnabledToForegroundConverter}}"
                Style="{StaticResource SettingsGroupTitleStyle}" />

            <Custom:HotkeySettingsControl
                x:Uid="ColorPicker_ActivationShortcut"
                MinWidth="240"
                Margin="{StaticResource SmallTopMargin}"
                HorizontalAlignment="Left"
                Enabled="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled}"
                HotkeySettings="{x:Bind Path=ViewModel.ActivationShortcut, Mode=TwoWay}"
                Keys="Win, Ctrl, Alt, Shift" />

            <TextBlock
                x:Name="ColorPicker_ActivationAction"
                x:Uid="ColorPicker_ActivationAction"
                Margin="{StaticResource MediumTopMargin}"
                Foreground="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled, Converter={StaticResource ModuleEnabledToForegroundConverter}}" />
            <StackPanel Margin="0,-4,0,0" AutomationProperties.LabeledBy="{Binding ElementName=ColorPicker_ActivationAction}">
                <RadioButton
                    Margin="{StaticResource SmallTopMargin}"
                    GroupName="ColorPickerActivationAction"
                    IsChecked="{Binding ActivationOpensColorPickerAndEditor, Mode=TwoWay}"
                    IsEnabled="{Binding IsEnabled}">
                    <RadioButton.Content>
                        <TextBlock LineHeight="20" TextWrapping="WrapWholeWords">
                            <Run x:Uid="ColorPickerFirst" />
                            <LineBreak />
                            <Run x:Uid="ColorPickerFirst_Description" Foreground="{ThemeResource SystemBaseMediumColor}" />
                        </TextBlock>
                    </RadioButton.Content>
                </RadioButton>

                <RadioButton
                    Margin="{StaticResource SmallTopMargin}"
                    GroupName="ColorPickerActivationAction"
                    IsChecked="{Binding ActivationOpensEditor, Mode=TwoWay}"
                    IsEnabled="{Binding IsEnabled}">
                    <RadioButton.Content>
                        <TextBlock LineHeight="20" TextWrapping="WrapWholeWords">
                            <Run x:Uid="EditorFirst" />
                            <LineBreak />
                            <Run x:Uid="EditorFirst_Description" Foreground="{ThemeResource SystemBaseMediumColor}" />
                        </TextBlock>
                    </RadioButton.Content>
                </RadioButton>

                <RadioButton
                    Margin="{StaticResource SmallTopMargin}"
                    GroupName="ColorPickerActivationAction"
                    IsChecked="{Binding ActivationOpensColorPickerOnly, Mode=TwoWay}"
                    IsEnabled="{Binding IsEnabled}">
                    <RadioButton.Content>
                        <TextBlock LineHeight="20" TextWrapping="WrapWholeWords">
                            <Run x:Uid="ColorPickerOnly" />
                            <LineBreak />
                            <Run x:Uid="ColorPickerOnly_Description" Foreground="{ThemeResource SystemBaseMediumColor}" />
                        </TextBlock>
                    </RadioButton.Content>
                </RadioButton>
            </StackPanel>

            <TextBlock
                x:Uid="ColorFormats"
                Foreground="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled, Converter={StaticResource ModuleEnabledToForegroundConverter}}"
                Style="{StaticResource SettingsGroupTitleStyle}" />

            <ComboBox
                x:Name="ColorPicker_ComboBox"
                x:Uid="ColorPicker_CopiedColorRepresentation"
                MinWidth="240"
                Margin="{StaticResource SmallTopMargin}"
                HorizontalAlignment="Left"
                DisplayMemberPath="Value"
                IsEnabled="{Binding IsEnabled}"
                ItemsSource="{Binding SelectableColorRepresentations}"
                Loaded="ColorPicker_ComboBox_Loaded"
                SelectedValue="{Binding SelectedColorRepresentationValue, Mode=TwoWay}"
                SelectedValuePath="Key" />

            <CheckBox
                x:Uid="ColorPicker_ShowColorName"
                Margin="{StaticResource SmallTopMargin}"
                IsChecked="{Binding ShowColorName, Mode=TwoWay}"
                IsEnabled="{Binding IsEnabled}" />

            <TextBlock
                x:Uid="ColorPicker_Editor"
                Foreground="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled, Converter={StaticResource ModuleEnabledToForegroundConverter}}"
                Style="{StaticResource SettingsGroupTitleStyle}" />

            <TextBlock
                x:Name="ColorFormatsListViewLabel"
                x:Uid="ColorPicker_ColorFormatsDescription"
                Margin="{StaticResource SmallTopMargin}"
                Foreground="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled, Converter={StaticResource ModuleEnabledToForegroundConverter}}"
                TextWrapping="WrapWholeWords" />

            <!--  Disabled reordering by dragging  -->
            <!--  CanReorderItems="True" AllowDrop="True"  -->
            <ListView
                MaxWidth="466"
                Margin="-12,6,0,0"
                HorizontalAlignment="Left"
                AutomationProperties.LabeledBy="{Binding ElementName=ColorFormatsListViewLabel}"
                IsEnabled="{x:Bind Mode=OneWay, Path=ViewModel.IsEnabled}"
                ItemsSource="{Binding ColorFormats, Mode=TwoWay}">
                <ItemsControl.ItemContainerTransitions>
                    <TransitionCollection />
                </ItemsControl.ItemContainerTransitions>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="466" Background="Transparent">
                            <!-- Disabled reordering by dragging

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=GripperIcon}" PropertyName="Visibility" Value="Visible" />
                                </Core:EventTriggerBehavior>
                                <Core:EventTriggerBehavior EventName="PointerExited">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=GripperIcon}" PropertyName="Visibility" Value="Collapsed" />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>-->

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                    <Core:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=ButtonUp}"
                                        Value="Visible" />
                                    <Core:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=ButtonDown}"
                                        Value="Visible" />
                                </Core:EventTriggerBehavior>
                                <Core:EventTriggerBehavior EventName="PointerExited">
                                    <Core:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=ButtonUp}"
                                        Value="Collapsed" />
                                    <Core:ChangePropertyAction
                                        PropertyName="Visibility"
                                        TargetObject="{Binding ElementName=ButtonDown}"
                                        Value="Collapsed" />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>

                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Margin="0,8,0,0"
                                FontSize="16"
                                FontWeight="SemiBold"
                                Text="{Binding Name}" />
                            <TextBlock
                                Grid.Row="1"
                                Margin="0,0,0,8"
                                Foreground="{ThemeResource SystemBaseMediumColor}"
                                Text="{Binding Example}" />
                            <ToggleSwitch
                                Grid.RowSpan="2"
                                Margin="0,0,-36,0"
                                HorizontalAlignment="Right"
                                IsOn="{Binding IsShown, Mode=TwoWay}"
                                OffContent=""
                                OnContent="" />
                            <!-- Disabled reordering by dragging

                            <TextBlock Text="&#xE76F;"
                                       Visibility="Collapsed"
                                       x:Name="GripperIcon"
                                       VerticalAlignment="Center"
                                       Grid.RowSpan="2"
                                       FontSize="16"
                                       HorizontalAlignment="Right"
                                       Margin="0,0,36,0"
                                       FontFamily="Segoe MDL2 Assets" />-->

                            <Button
                                x:Name="ButtonUp"
                                x:Uid="ColorPicker_ButtonUp"
                                Grid.Row="0"
                                Margin="0,0,24,0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                Click="ReorderButtonUp_Click"
                                Content="&#xE74A;"
                                FontFamily="Segoe MDL2 Assets"
                                IsEnabled="{Binding CanMoveUp}"
                                Visibility="Collapsed">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click">
                                        <Core:ChangePropertyAction
                                            PropertyName="Visibility"
                                            TargetObject="{Binding ElementName=ButtonUp}"
                                            Value="Collapsed" />
                                        <Core:ChangePropertyAction
                                            PropertyName="Visibility"
                                            TargetObject="{Binding ElementName=ButtonDown}"
                                            Value="Collapsed" />
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </Button>
                            <Button
                                x:Name="ButtonDown"
                                x:Uid="ColorPicker_ButtonDown"
                                Grid.Row="1"
                                Margin="0,0,24,0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                Click="ReorderButtonDown_Click"
                                Content="&#xE74B;"
                                FontFamily="Segoe MDL2 Assets"
                                IsEnabled="{Binding CanMoveDown}"
                                Visibility="Collapsed">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click">
                                        <Core:ChangePropertyAction
                                            PropertyName="Visibility"
                                            TargetObject="{Binding ElementName=ButtonUp}"
                                            Value="Collapsed" />
                                        <Core:ChangePropertyAction
                                            PropertyName="Visibility"
                                            TargetObject="{Binding ElementName=ButtonDown}"
                                            Value="Collapsed" />
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!--
            Disabling this until we have a safer way to reset cursor as
            we can hit a state where the cursor doesn't reset

            <CheckBox x:Uid="ColorPicker_ChangeCursor"
                          IsChecked="{Binding ChangeCursor, Mode=TwoWay}"
                          Margin="{StaticResource SmallTopMargin}"
                          IsEnabled="{Binding IsEnabled}"/>
            -->
        </StackPanel>

        <RelativePanel
            x:Name="SidePanel"
            Grid.Column="1"
            Width="{StaticResource SidePanelWidth}"
            HorizontalAlignment="Left">
            <StackPanel x:Name="DescriptionPanel">
                <TextBlock
                    x:Name="AboutTitle"
                    x:Uid="About_ColorPicker"
                    Grid.ColumnSpan="2"
                    Margin="{StaticResource XSmallBottomMargin}"
                    Style="{StaticResource SettingsGroupTitleStyle}" />
                <TextBlock
                    x:Uid="ColorPicker_Description"
                    Grid.Row="1"
                    TextWrapping="Wrap" />
            </StackPanel>

            <Border
                x:Name="AboutImage"
                Grid.Row="2"
                MaxWidth="240"
                Margin="{StaticResource SmallTopBottomMargin}"
                HorizontalAlignment="Left"
                CornerRadius="4"
                RelativePanel.Below="DescriptionPanel">
                <HyperlinkButton x:Uid="ColorPicker_ImageHyperlinkToDocs">
                    <Image x:Uid="ColorPicker_Image" Source="ms-appx:///Assets/Modules/ColorPicker.png" />
                </HyperlinkButton>
            </Border>
            <StackPanel
                x:Name="LinksPanel"
                Margin="0,1,0,0"
                Orientation="Vertical"
                RelativePanel.Below="AboutImage">
                <HyperlinkButton x:Uid="ColorPicker_ImageHyperlinkToDocs">
                    <TextBlock x:Uid="Module_overview" />
                </HyperlinkButton>
                <HyperlinkButton NavigateUri="https://aka.ms/powerToysGiveFeedback">
                    <TextBlock x:Uid="Give_Feedback" />
                </HyperlinkButton>

                <TextBlock x:Uid="AttributionTitle" Style="{StaticResource SettingsGroupTitleStyle}" />

                <HyperlinkButton Margin="0,-3,0,0" NavigateUri="https://github.com/martinchrzan/ColorPicker/">
                    <TextBlock Text="Martin Chrzan's Color Picker" TextWrapping="Wrap" />
                </HyperlinkButton>

                <HyperlinkButton Margin="0,-3,0,0" NavigateUri="https://medium.com/@Niels9001/a-fluent-color-meter-for-powertoys-20407ededf0c">
                    <TextBlock Text="Niels Laute's UX concept" TextWrapping="Wrap" />
                </HyperlinkButton>

            </StackPanel>
        </RelativePanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LayoutVisualStates">
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideLayoutMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="SmallLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallLayoutMinWidth}" />
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SidePanel.(Grid.Column)" Value="0" />
                        <Setter Target="SidePanel.Width" Value="Auto" />
                        <Setter Target="ColorPickerView.(Grid.Row)" Value="1" />
                        <Setter Target="ColorPickerView.Margin" Value="0" />
                        <Setter Target="LinksPanel.(RelativePanel.RightOf)" Value="AboutImage" />
                        <Setter Target="LinksPanel.(RelativePanel.AlignTopWith)" Value="AboutImage" />
                        <Setter Target="AboutImage.Margin" Value="0,12,12,0" />
                        <Setter Target="AboutTitle.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>