<Page
    x:Class="Microsoft.PowerToys.Settings.UI.Views.DashboardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Lib="using:Microsoft.PowerToys.Settings.UI.Library"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:custom="using:Microsoft.PowerToys.Settings.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:localConverters="using:Microsoft.PowerToys.Settings.UI.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:Microsoft.PowerToys.Settings.UI.ViewModels"
    AutomationProperties.LandmarkType="Main"
    DataContext="DashboardViewModel"
    mc:Ignorable="d">

    <Page.Resources>
        <localConverters:ModuleItemTemplateSelector
            x:Key="ModuleItemTemplateSelector"
            ButtonTemplate="{StaticResource ModuleItemButtonTemplate}"
            KBMTemplate="{StaticResource ModuleItemKBMTemplate}"
            ShortcutTemplate="{StaticResource ModuleItemShortcutTemplate}"
            TextTemplate="{StaticResource ModuleItemTextTemplate}" />
        <converters:CollectionVisibilityConverter x:Key="CollectionVisibilityConverter" />
        <Style x:Name="KeysListViewContainerStyle" TargetType="ListViewItem">
            <Setter Property="IsTabStop" Value="False" />
        </Style>
        <localConverters:UpdateStateToBoolConverter x:Key="UpdateStateToBoolConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter
            x:Key="BoolToInvertedVisibilityConverter"
            FalseValue="Visible"
            TrueValue="Collapsed" />
        <DataTemplate x:Key="OriginalKeyTemplate" x:DataType="x:String">
            <custom:KeyVisual Content="{Binding}" VisualType="SmallOutline" />
        </DataTemplate>

        <DataTemplate x:Key="RemappedKeyTemplate" x:DataType="x:String">
            <custom:KeyVisual Content="{Binding}" VisualType="Small" />
        </DataTemplate>

        <DataTemplate x:Key="ModuleItemTextTemplate" x:DataType="viewmodels:DashboardModuleTextItem">
            <TextBlock
                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind Label, Mode=OneWay}"
                    TextWrapping="WrapWholeWords" />
        </DataTemplate>

        <DataTemplate x:Key="ModuleItemButtonTemplate" x:DataType="viewmodels:DashboardModuleButtonItem">
            <Button
                    HorizontalAlignment="Stretch"
                    Click="{x:Bind ButtonClickHandler, Mode=OneWay}"
                    Content="{x:Bind ButtonTitle}" />
        </DataTemplate>

        <DataTemplate x:Key="ModuleItemShortcutTemplate" x:DataType="viewmodels:DashboardModuleShortcutItem">
            <StackPanel Orientation="Horizontal" Spacing="12">
                <Border
                    Padding="8"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource ControlCornerRadius}">
                    <ItemsControl
                        AutomationProperties.AccessibilityView="Raw"
                        IsTabStop="False"
                        ItemsSource="{x:Bind Path=Shortcut, Mode=TwoWay}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="12" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <custom:KeyVisual
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Content="{Binding}"
                                    IsTabStop="False"
                                    VisualType="TextOnly" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>

                <TextBlock
                    VerticalAlignment="Center"
                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind Label, Mode=OneWay}"
                    TextWrapping="WrapWholeWords" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ModuleItemKBMTemplate" x:DataType="viewmodels:DashboardModuleKBMItem">
            <StackPanel Orientation="Vertical">
                <ListView
                    IsSwipeEnabled="False"
                    ItemsSource="{x:Bind Path=RemapKeys, Mode=OneWay}"
                    SelectionMode="None">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="Lib:KeysDataModel">
                            <controls:SettingsCard ContentAlignment="Left">
                                <StackPanel Orientation="Horizontal">
                                    <ItemsControl
                                        IsTabStop="False"
                                        ItemTemplate="{StaticResource OriginalKeyTemplate}"
                                        ItemsSource="{x:Bind GetMappedOriginalKeys()}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" Spacing="4" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <custom:IsEnabledTextBlock
                                        x:Uid="To"
                                        Margin="8,0,8,0"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource SecondaryIsEnabledTextBlockStyle}" />
                                    <ItemsControl
                                        IsTabStop="False"
                                        ItemTemplate="{StaticResource RemappedKeyTemplate}"
                                        ItemsSource="{x:Bind GetMappedNewRemapKeys()}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" Spacing="4" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </StackPanel>
                            </controls:SettingsCard>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <ListView
                    IsSwipeEnabled="False"
                    ItemsSource="{x:Bind Path=RemapShortcuts, Mode=OneWay}"
                    SelectionMode="None">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="Lib:AppSpecificKeysDataModel">
                            <controls:SettingsCard ContentAlignment="Left">
                                <StackPanel Orientation="Horizontal">
                                    <ItemsControl
                                        IsTabStop="False"
                                        ItemTemplate="{StaticResource OriginalKeyTemplate}"
                                        ItemsSource="{x:Bind GetMappedOriginalKeys()}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" Spacing="4" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <custom:IsEnabledTextBlock
                                        x:Uid="To"
                                        Margin="8,0,8,0"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource SecondaryIsEnabledTextBlockStyle}" />

                                    <ItemsControl
                                        Name="KeyboardManager_RemappedTo"
                                        x:Uid="KeyboardManager_RemappedTo"
                                        IsTabStop="False"
                                        ItemTemplate="{StaticResource RemappedKeyTemplate}"
                                        ItemsSource="{x:Bind GetMappedNewRemapKeys()}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" Spacing="4" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <Border
                                        Margin="16,0,0,0"
                                        Padding="12,4,12,6"
                                        VerticalAlignment="Center"
                                        CornerRadius="12">
                                        <Border.Background>
                                            <SolidColorBrush Opacity="0.3" Color="{ThemeResource SystemAccentColor}" />
                                        </Border.Background>
                                        <TextBlock Text="{x:Bind TargetApp}" />
                                    </Border>
                                </StackPanel>
                            </controls:SettingsCard>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>
    <Grid Margin="16,0,0,0" RowSpacing="24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="700" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ModulesGrid.(Grid.Column)" Value="0" />
                        <Setter Target="DashboardView.(Grid.Row)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <TextBlock
            x:Uid="DashboardTitle"
            VerticalAlignment="Center"
            Style="{StaticResource TitleTextBlockStyle}" />
        <Button
            Width="64"
            Margin="0,0,32,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Click="AddButtonClick"
            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
            Style="{StaticResource SubtleButtonStyle}">
            <Button.Content>
                <FontIcon FontSize="24" Glyph="{x:Bind ViewModel.AddButtonGlyph, Mode=OneWay}" />
            </Button.Content>
        </Button>

        <InfoBar
            x:Uid="UpdateAvailable"
            Margin="0,0,16,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            IsClosable="False"
            IsOpen="{x:Bind ViewModel.UpdateAvailable, Mode=OneWay}"
            Severity="Success">
            <InfoBar.ActionButton>
                <Button x:Uid="LearnMore" Click="SWVersionButtonClicked" />
            </InfoBar.ActionButton>
        </InfoBar>

        <ScrollViewer Grid.Row="1">
            <Grid
                Margin="0,0,16,0"
                ColumnSpacing="16"
                RowSpacing="16">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid
                    x:Name="ModulesGrid"
                    Grid.Column="1"
                    MinWidth="360"
                    VerticalAlignment="Top"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource OverlayCornerRadius}"
                    RowSpacing="12"
                    Visibility="{x:Bind ViewModel.IsAddPanelVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        Margin="16,16,0,16"
                        Style="{StaticResource BodyStrongTextBlockStyle}"
                        Text="All modules" />
                    <ItemsRepeater Grid.Row="1" ItemsSource="{x:Bind ViewModel.AllModules, Mode=OneWay}">
                        <ItemsRepeater.Layout>
                            <StackLayout Orientation="Vertical" />
                        </ItemsRepeater.Layout>
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="viewmodels:DashboardListItem">
                                <Grid
                                    Height="56"
                                    Padding="20,0,20,0"
                                    BorderBrush="{ThemeResource DividerStrokeColorDefaultBrush}"
                                    BorderThickness="0,1,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image Width="20" Margin="0,0,16,0">
                                        <Image.Source>
                                            <BitmapImage UriSource="{x:Bind Icon, Mode=OneWay}" />
                                        </Image.Source>
                                    </Image>
                                    <TextBlock
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind Label, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                    <FontIcon
                                        Grid.Column="2"
                                        Width="20"
                                        Margin="0,0,16,0"
                                        FontSize="16"
                                        Glyph="&#xE72E;"
                                        Visibility="{x:Bind IsLocked, Converter={StaticResource BoolToInvertedVisibilityConverter}, ConverterParameter=True, Mode=OneWay}">
                                        <ToolTipService.ToolTip>
                                            <TextBlock x:Uid="GPO_IsSettingForcedText" />
                                        </ToolTipService.ToolTip>
                                    </FontIcon>
                                    <ToggleSwitch
                                        Grid.Column="3"
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Right"
                                        IsEnabled="{x:Bind IsLocked, Converter={StaticResource BoolNegationConverter}, ConverterParameter=True, Mode=OneWay}"
                                        IsOn="{x:Bind IsEnabled, Mode=TwoWay}"
                                        OffContent=""
                                        OnContent=""
                                        Style="{StaticResource RightAlignedCompactToggleSwitchStyle}" />
                                </Grid>
                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                    </ItemsRepeater>
                </Grid>

                <ItemsRepeater x:Name="DashboardView" ItemsSource="{x:Bind ViewModel.ActiveModules, Mode=OneWay}">
                    <ItemsRepeater.Layout>
                        <controls:StaggeredLayout
                            ColumnSpacing="8"
                            DesiredColumnWidth="420"
                            RowSpacing="8" />
                    </ItemsRepeater.Layout>
                    <ItemsRepeater.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:DashboardListItem">
                            <Grid
                                Padding="16"
                                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                BorderThickness="1"
                                CornerRadius="{StaticResource OverlayCornerRadius}"
                                RowSpacing="12">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid ColumnSpacing="12">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Width="20" Margin="0,0,0,0">
                                        <Image.Source>
                                            <BitmapImage UriSource="{x:Bind Icon, Mode=OneWay}" />
                                        </Image.Source>
                                    </Image>
                                    <TextBlock
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        FontWeight="SemiBold"
                                        Text="{x:Bind Label, Mode=OneWay}"
                                        TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <ItemsControl
                                    Grid.Row="1"
                                    ItemTemplateSelector="{StaticResource ModuleItemTemplateSelector}"
                                    ItemsSource="{x:Bind DashboardModuleItems, Mode=OneWay}"
                                    Visibility="{x:Bind IsEnabled, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Spacing="4" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                        </DataTemplate>
                    </ItemsRepeater.ItemTemplate>
                </ItemsRepeater>
            </Grid>
        </ScrollViewer>
    </Grid>
</Page>